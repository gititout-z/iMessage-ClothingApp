# SwiftLint Configuration File

# Paths to include for linting
included:
  - iMessage-Extension/MessagesExtension/

# Paths to ignore (often includes 3rd party code, build artifacts)
excluded:
  - Pods/
  - DerivedData/
  - .bundle/ # For bundled resources within the project if any
  - "Project Files/" # Exclude the .xcodeproj itself if it contains problematic text files.

# Rule Configurations
# See https://realm.github.io/SwiftLint/rule-directory.html for all rules

# Rules to opt-in (beyond the default set, if any specific ones are desired)
# opt_in_rules:
#   - empty_count # Already default, but good to be aware of
#   - explicit_init # Consider for stricter initialization patterns

# Rules to disable (from the default set)
disabled_rules:
  - todo # Don't warn on TODO comments for now
  - multiple_closures_with_trailing_closure # Can be too opinionated
  - identifier_name # Can be too strict initially; enable later if desired (min_length, max_length can be configured)
  - nesting # Default level of 1 for types, 2 for functions can be strict. Review if needed.
  - type_name # Default is CamelCase, usually fine.
  - opening_brace # For K&R style, default is typically fine.
  - statement_position # Default is typically fine.
  - colon # Default spacing is typically fine.

# Individual rule configurations
line_length: 
  warning: 160
  error: 200 # Allow slightly longer lines before erroring
  ignores_comments: true
  ignores_urls: true

function_body_length:
  warning: 70 # Slightly increased from typical defaults
  error: 100

type_body_length:
  warning: 350
  error: 500

file_length:
  warning: 500
  error: 700

cyclomatic_complexity:
  warning: 15 
  error: 25 # Functions should not be too complex

large_tuple: 
  warning: 3 # Tuples with more than 2 items can be hard to read
  error: 4

# Ensure these important rules are enabled (they are by default, but explicit configuration here acts as documentation)
force_cast: error # Default: error
force_try: error  # Default: error
trailing_whitespace: error # Default: error (autocorrectable)
unused_closure_parameter: warning # Default: warning
unused_optional_binding: warning # Default: warning
valid_ibinspectable: error # Default: error
empty_count: warning # Default: warning (use `isEmpty` over `count == 0`)
legacy_cggeometry_functions: error # Default: error
legacy_constant: error # Default: error
legacy_constructor: error # Default: error
redundant_discardable_let: error # Default: error
unused_enumerated: warning # Default: warning
vertical_whitespace: # Default: warning (configurable)
  max_empty_lines: 1

# Consider enabling these later for stricter style:
# - explicit_type_interface
# - explicit_acl
# - redundant_optional_initialization
# - private_outlet
# - private_unit_test
# - first_where
# - contains_over_first_not_nil
# - sorted_imports
# - fallthrough
# - discouraged_optional_boolean
# - discouraged_object_literal
# - convenience_type
# - class_delegate_protocol
# - anyobject_protocol
# - unneeded_parentheses_in_closure_argument
# - let_var_whitespace
# - operator_usage_whitespace
# - implicit_getter
# - explicit_self
# - nimble_operator
# - yoda_condition

# Custom rules (Example - not adding any custom for this default setup)
# custom_rules:
#   no_objc_members:
#     name: "No @objc Members"
#     message: "Avoid using @objc members."
#     regex: "@objc"
#     severity: warning
